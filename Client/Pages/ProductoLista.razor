@page "/Productolista"
@inject HttpClient HttpClient
@using CurrieTechnologies.Razor.SweetAlert2;
@using pasteleriaWebapp.Shared
@inject NavigationManager NavigationManager
@inject SweetAlertService Swal



<h3>Lista De Productos</h3>

@if (Productos is null)
{
    <p>La lista esta vacia</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id Producto</th>
                <th>Nombre</th>
                <th>Decripcion</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Productos)
            {
                <tr>
                    <td>@item.IdProducto</td>
                    <td>@item.Nombre</td>
                    <td>@item.Descripcion</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => Editar(item.IdProducto)"><i class="oi oi-pencil"></i></button>
                        <button class="btn btn-danger" @onclick="() => Eliminar(item.IdProducto)"><i class="oi oi-trash"></i></button>
                    </td>
                </tr>
            }

        </tbody>

    </table>
    <button class="btn btn-primary"@onclick="CrearProducto">Crear un Registro</button>
}

@code {
    public List<Producto>? Productos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CargarDatos();
    }


    private async Task CargarDatos()
    {
        Productos = await HttpClient.GetFromJsonAsync<List<Producto>>("api/Productos");
    }


    private void CrearProducto()
    {
        NavigationManager.NavigateTo("/productos/crear");
    }
    private void Editar(int id)
    {
        NavigationManager.NavigateTo($"/productos/editar/{id}");
    }

    private async Task Eliminar(int id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Esta Seguro",
                Text = "No podra revertir esta  situacion",
                Icon = SweetAlertIcon.Question,
                ConfirmButtonText = "Si,Eliminar",
                CancelButtonText = "Cancelar",
                ShowCancelButton = true,

        });
        if (resultado.IsConfirmed)
        {
            await HttpClient.DeleteAsync($"api/Productos/{id}");
            await CargarDatos();
        }
    }
}
